<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!--开启注解扫描功能-->
    <context:annotation-config></context:annotation-config>
    <!--定义注解扫描的包-->
    <context:component-scan base-package="com.wang.mapper"></context:component-scan>
    <context:component-scan base-package="com.wang.service"></context:component-scan>
    <context:component-scan base-package="com.wang.domain"></context:component-scan>
    <!--开启aop自动代理模式-->
    <aop:aspectj-autoproxy proxy-target-class="true"/>

    <!--从上下文环境中读取db.properties配置文件-->
    <context:property-placeholder location="classpath*:db.properties"></context:property-placeholder>

    <bean id="dataSource"  class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="${dbcp.driverClassName}"></property>
        <property name="url" value="${dbcp.url}"></property>
        <property name="username" value="${dbcp.username}"></property>
        <property name="password" value="${dbcp.password}"></property>
        <property name="maxActive" value="${dbcp.maxIdle}"></property>
        <property name="initialSize" value="${dbcp.initialSize}"></property>
    </bean>

    <!--通过mybatis和spring结合的类，创建sqlsessionFactory-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <!--指定myabtis配置文件位置-->
        <property name="configLocation" value="classpath:mybatis-config.xml" />
    </bean>

    <!-- scan for mappers and let them be autowired
    MapperScannerConfigurer Mybatis-Spring 会自动为我们注册Mapper对应的MapperFactoryBean对象-->
    <!-- Mapper接口所在包名，Spring会自动查找其下的Mapper -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.wang.mapper" />
    </bean>

    <!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <!-- 配置事务属性 -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="save*"    propagation="REQUIRED"/>
            <tx:method name="update*"  propagation="REQUIRED"/>
            <tx:method name="delete*"  propagation="REQUIRED"/>
            <tx:method name="*" propagation="NOT_SUPPORTED"></tx:method>
        </tx:attributes>
    </tx:advice>

    <!-- 配置事务切入点 -->
    <aop:config>
        <aop:pointcut expression="execution(* com.wang.service.impl.*.*(..))" id="pointCut"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="pointCut"/>
    </aop:config>

</beans>